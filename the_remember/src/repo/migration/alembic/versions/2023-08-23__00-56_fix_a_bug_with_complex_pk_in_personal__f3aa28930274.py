"""fix a bug with complex pk in personal term table

Revision ID: f3aa28930274
Revises: 25c31049cfb4
Create Date: 2023-08-23 00:56:12.980298

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f3aa28930274'
down_revision = '25c31049cfb4'
branch_labels = None
depends_on = None


def upgrade():
    # TODO: check it!
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(  # language=PostgreSQL
        """
    CREATE  UNIQUE  INDEX IF NOT EXISTS
    personalize_term__term_id_user_id__will_pk 
    on personalize_term  (term_id, user_id)
    """)
    op.execute(  # language=PostgreSQL
        """
        ALTER TABLE personalize_term DROP CONSTRAINT if exists personalize_term_pkey
        """)
    op.execute(  # language=PostgreSQL
        """
     ALTER TABLE personalize_term
      ADD PRIMARY KEY USING INDEX personalize_term__term_id_user_id__will_pk
    """)
    op.create_unique_constraint('personalize_term__module_id_term_id_user_id__qc', 'personalize_term', ['module_id', 'term_id', 'user_id'])

    # ### end Alembic commands ###


def downgrade():
    # TODO: check it!
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('personalize_term__module_id_term_id_user_id__qc', 'personalize_term', type_='unique')
    op.execute(  # language=PostgreSQL
        """
    CREATE  UNIQUE  INDEX IF NOT EXISTS
    personalize_term_pkey 
    on personalize_term  (module_id, term_id, user_id)
    """)
    op.execute(  # language=PostgreSQL
        """
        ALTER TABLE personalize_term DROP CONSTRAINT if exists personalize_term__term_id_user_id__will_pk
        """)
    op.execute(  # language=PostgreSQL
        """
     ALTER TABLE personalize_term
      ADD PRIMARY KEY USING INDEX personalize_term_pkey
    """)
    # ### end Alembic commands ###
