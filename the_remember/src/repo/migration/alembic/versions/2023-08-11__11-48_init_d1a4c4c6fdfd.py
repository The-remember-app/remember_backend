"""init

Revision ID: d1a4c4c6fdfd
Revises: 7931f88b3838
Create Date: 2023-08-11 11:48:15.773703

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'd1a4c4c6fdfd'
down_revision = '7931f88b3838'
branch_labels = None
depends_on = None


def upgrade():
    # TODO: check it!
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
                    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
                    sa.Column('username', sa.String(), nullable=False),
                    sa.Column('email', sa.String(), nullable=False),
                    sa.Column('hashed_password', sa.String(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('surname', sa.String(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('username')
                    )
    op.create_table('folder',
                    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('user_id', sa.UUID(), nullable=False),
                    sa.Column('root_folder_id', sa.UUID(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(['root_folder_id'], ['folder.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('module',
                    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('author_id', sa.UUID(), nullable=False),
                    sa.Column('root_folder_id', sa.UUID(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
                    sa.ForeignKeyConstraint(['root_folder_id'], ['folder.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('personalize_module',
                    sa.Column('module_id', sa.UUID(), nullable=False),
                    sa.Column('user_id', sa.UUID(), nullable=False),
                    sa.Column('is_reverse_definition_write', sa.Boolean(), server_default=sa.text('true'),
                              nullable=False),
                    sa.Column('standard_and_reverse_write', sa.Boolean(), server_default=sa.text('false'),
                              nullable=False),
                    sa.Column('is_reverse_definition_choice', sa.Boolean(), server_default=sa.text('false'),
                              nullable=False),
                    sa.Column('standard_and_reverse_choice', sa.Boolean(), server_default=sa.text('false'),
                              nullable=False),
                    sa.ForeignKeyConstraint(['module_id'], ['module.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('module_id', 'user_id')
                    )
    op.create_table('term',
                    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
                    sa.Column('term', sa.String(), nullable=False),
                    sa.Column('definition', sa.String(), nullable=False),
                    sa.Column('module_id', sa.UUID(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(['module_id'], ['module.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('personalize_term',
                    sa.Column('module_id', sa.UUID(), nullable=False),
                    sa.Column('user_id', sa.UUID(), nullable=False),
                    sa.Column('term_id', sa.UUID(), nullable=False),
                    sa.Column('choose_error_counter', sa.Integer(), server_default=sa.text('0'), nullable=False),
                    sa.Column('write_error_counter', sa.Integer(), server_default=sa.text('0'), nullable=False),
                    sa.Column('choice_neg_error_counter', sa.Integer(), server_default=sa.text('0'), nullable=False),
                    sa.ForeignKeyConstraint(['module_id', 'user_id'],
                                            ['personalize_module.module_id', 'personalize_module.user_id'], ),
                    sa.ForeignKeyConstraint(['module_id'], ['module.id'], ),
                    sa.ForeignKeyConstraint(['term_id'], ['term.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('module_id', 'user_id', 'term_id', name='personalize_term_pkey')
                    )
    # ### end Alembic commands ###


def downgrade():
    # TODO: check it!
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('personalize_term')
    op.drop_table('term')
    op.drop_table('personalize_module')
    op.drop_table('module')
    op.drop_table('folder')
    op.drop_table('user')
    # ### end Alembic commands ###
